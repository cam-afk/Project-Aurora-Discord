# ─────────────────────────────────────────────────────────────────────────────
# 1) Pick a base image with Python 3.x (Debian slim is easier than Alpine)
# ─────────────────────────────────────────────────────────────────────────────

FROM python:3.9-slim


# ─────────────────────────────────────────────────────────────────────────────
# 2) Set a working directory inside the container
# ─────────────────────────────────────────────────────────────────────────────

WORKDIR /usr/src/app

# ─────────────────────────────────────────────────────────────────────────────
# 3) Copy requirements.txt into the image, so we can install deps first
# ─────────────────────────────────────────────────────────────────────────────

COPY requirements.txt ./

# ─────────────────────────────────────────────────────────────────────────────
# 4) Install Python dependencies
# ─────────────────────────────────────────────────────────────────────────────

RUN pip install --no-cache-dir -r requirements.txt

# ─────────────────────────────────────────────────────────────────────────────
# 5) Copy the rest of your bot’s code into the image
# ─────────────────────────────────────────────────────────────────────────────

COPY . .

# ─────────────────────────────────────────────────────────────────────────────
# 6) Tell Docker which command to run when the container starts
# ─────────────────────────────────────────────────────────────────────────────

CMD [ "python", "Project Aurora.py" ]
